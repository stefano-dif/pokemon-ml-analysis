bind_cols(pk_classes, pk_classes) %>%
head()
bind_cols(pk_classes, pk_classes) %>%
head()
bind_cols(pk_classes, pk_classes) %>%
head()
dim(pk_classes)
dim(pk_stats)
pk_stats
bind_cols(pk_classes, pk_stats)
pk_classes %>%
sample_frac(0.5) -> temp1
pk_classes %>%
sample_frac(0.5) -> temp2
View(temp1)
View(temp2)
left_join(temp 1, temp2, by = "pokedex_number",
left_join(temp1, temp2, by = "pokedex_number",
suffix = c("_A", "_B"))
pk_stats
pk_stats %>%
sample_frac(0.5) -> temp2
pk_classes %>%
sample_frac(0.5) -> temp1
pk_stats %>%
sample_frac(0.5) -> temp2
left_join(temp1, temp2, by = "pokedex_number")
pk_classes %>%
sample_frac(0.5) -> temp1
pk_stats %>%
sample_frac(0.1) -> temp2
left_join(temp1, temp2, by = "pokedex_number")
inner_join(temp1, temp2, by = "pokedex_number")
inner_join(temp1, temp2, by = "pokedex_number")
right_join(temp1, temp2, by = "pokedex_number")
right_join(temp1, temp2, by = "pokedex_number")
outer_join(temp1, temp2, by = "pokedex_number")
outer_join(temp1, temp2, by = "pokedex_number")
full_join(temp1, temp2, by = "pokedex_number")
full_join(temp1, temp2, by = "pokedex_number")
full_join(temp1, temp2, by = "pokedex_number")
setdiff(temp1, temp2)
anti_join(temp1, temp2, by = "pokedex_number")
?semi_join
semi_join(temp1, temp2, by = "pokedex_number")
ggplot(pokemon)+
geom_density(aes(x = attack, fill = factor(generation)), position = "fill")
pokemon %>%
ggplot()+
geom_density(aes(x = attack, fill = factor(generation)), position = "stack")
pokemon %>%
ggplot()+
geom_histogram(aes(x = attack, fill = factor(generation)), position = "stack")
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, fill = factor(generation)))+
facet_grid(~factor(generation))
?facet_grid
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
facet_grid(~factor(generation))
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
facet_grid(~factor(generation), cols = 3)
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
facet_grid(cols = 3)
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
facet_wrap(~factor(generation))
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
geom_smoot(method = "lm")+
facet_wrap(~factor(generation))
ggplot(pokemon)+
geom_point(aes(x = attack, y = defense, colour = factor(generation)))+
geom_smooth(method = "lm")+
facet_wrap(~factor(generation))
ggplot(pokemon, aes(x = attack, y = defense))+
geom_point(aes(colour = factor(generation)))+
geom_smooth(method = "lm")+
facet_wrap(~factor(generation))
ggplot(pokemon, aes(x = type1, x = type2))+
geom_count()
ggplot(pokemon, aes(x = type1, y = type2))+
geom_count()
ggplot(pokemon, aes(x = type1, y = type2))+
geom_count()+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))
ggplot(pokemon, aes(x = type1, y = type2))+
geom_count()+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
pokemon %>%
ggplot(aes(x = factor(generation), y = speed))+
geom_boxplot(aes(fill = factor(generation)))
pk_stats
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))
pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
pull(n)
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))
pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n)
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))+
geom_abline(aes(intercept = nrow(pokemon)/7, slope = 0), size = 1.5)+
ylab("# of pokemons") + xlab("generation")
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))+
geom_abline(aes(intercept = nrow(pokemon)/7, slope = 0), size = 1.5)+
ylab("# of pokemons") + xlab("generation")+
coord_flip()
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~is_legendary)
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~factor(is_legendary))
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~is_legendary)
---
title: "R data analysis recap with Pokemon"
{r}
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~is_legendary)
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))+
geom_abline(aes(intercept = nrow(pokemon)/7, slope = 0), size = 1.5)+
ylab("# of pokemons") + xlab("generation")+
coord_flip()
library(readr)
library(tibble)
library(tidyr)
library(dplyr)
library(ggplot2)
pokemon
pokemon[, 1]
pokemon
typesof(pokemon)
typeof(pokemon)
class(pokemon)
library(readr)
library(tibble)
library(tidyr)
library(dplyr)
library(ggplot2)
path <- "../data/pokemon_cleaned.csv"
pokemon <- read_csv(path)[, -1]
print(class(pokemon))
pokemon %>% head(5)
path <- "../data/pokemon_cleaned.csv"
pokemon <- read_csv(path)[, -1]
cat(class(pokemon))
pokemon %>% head(5)
path <- "../data/pokemon_cleaned.csv"
pokemon <- read_csv(path)[, -1]
print(class(pokemon))
pokemon %>% head(5)
#|echo: False
glimpse(pokemon)
glimpse(pokemon)
df <- gather(pokemon, "hp", "attack", "defense", "sp_attack", "sp_defense", "speed",
key = "statistic", value = "score")
df[df$pokedex_number == 18, c("pokedex_number", "name", "statistic", "score")]
pk_stats <- gather(pokemon, "hp", "attack", "defense", "sp_attack", "sp_defense", "speed",
key = "statistic", value = "score")
pk_stats <- pk_stats[, c("pokedex_number", "name", "statistic", "score")]
pk_stats[pk_stats$pokedex_number == 308, ]
pk_stats %>% spread(key = "statistic", value = "score") %>%
filter(pokedex_number == 308)
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))+
geom_abline(aes(intercept = nrow(pokemon)/7, slope = 0), size = 1.5)+
ylab("# of pokemons") + xlab("generation")+
coord_flip()
pokemon["classification"]
pk_classes <- separate(pokemon, col = "classification",
into = c("first", "second", "third", "fourth", "fifth"),
sep = " ")[,
c("pokedex_number", "first", "second", "third", "fourth", "fifth")]
pk_classes[sample(1:nrow(pk_classes), 10), ]
drop_na(pk_classes)
pokemon["classification"]
library(stringi)
stri_count_words("hey hoe")
stri_count_words(pokemon["classification"])
lapply(pokemon["classification"], FUN = stri_count_words)
library(stringi)
library(stringr)
lapply(pokemon["classification"], FUN = str_count(patterh = "\\w+"))
lapply(pokemon["classification"], FUN = str_count(pattern = "\\w+"))
lapply(pokemon["classification"], FUN = str_count(., pattern = "\\w+"))
pokemon["classification"]
pokemon[["classification"]]
pokemon["classification"] %>%
mutate(n_words = lengths(strsplit(classification, split = " ")))
pokemon["classification"] %>%
mutate(n_words = lengths(strsplit(classification, split = " "))) %>%
select(n_words) %>% max()
print("Max words in Pokemon classification is", max_words_class)
print("Max words in Pokemon classification is" + max_words_class)
pokemon["classification"] %>%
mutate(n_words = lengths(strsplit(classification, split = " "))) %>%
select(n_words) %>% max() -> max_words_class
print("Max words in Pokemon classification is" + max_words_class)
print("Max words in Pokemon classification is", max_words_class)
print("Max words in Pokemon classification is" + str(max_words_class))
print("Max words in Pokemon classification is" + as.character(max_words_class))
max_words_class
print(paste("Max words in Pokemon classification is" + as.character(max_words_class)))
pokemon["classification"] %>%
mutate(n_words = lengths(strsplit(classification, split = " "))) %>%
select(n_words) %>% max() -> max_words_class
print(paste("Max words in Pokemon classification is", as.character(max_words_class)))
pk_classes <- separate(pokemon, col = "classification",
into = c("first", "second", "third", "fourth", "fifth"),
sep = " ")[, c("pokedex_number", "first", "second", "third", "fourth", "fifth")]
pk_classes[sample(1:nrow(pk_classes), 10), ]
drop_na(pk_classes)
drop_na(pk_classes, c("third", "fourth"))
drop_na(pk_classes, c("third"))
drop_na(pk_classes, c("fourth"))
drop_na(pk_classes, c("thirds")) %>% nrow()
drop_na(pk_classes, c("thirds")) %>% length()
drop_na(pk_classes, c("third")) %>% length()
drop_na(pk_classes, c("third")) %>% nrow()
drop_na(pk_classes, c("fourth")) %>% nrow()
drop_na(pk_classes)
drop_na(pk_classes) %>% nrow()
print(drop_na(pk_classes) %>% nrow())
print(drop_na(pk_classes, c("fourth")) %>% nrow())
print(drop_na(pk_classes, c("third")) %>% nrow())
pk_classes %>%
select_if(is.na(.))
pk_classes %>%
select_if(~ !any(is.na(.)))
select_if(any(is.na(.))
select_if(any(is.na(.))
select_if(any(is.na(.))
select_if(~any(is.na(.))
pk_classes %>%
select_if(any(is.na(.)))
pk_classes %>%
select_if(any(is.na(.)))
pk_classes %>%
select_if(!any(is.na(.)))
pk_classes %>%
select_if(~ !any(is.na(.)))
pk_classes %>%
select_if(~ any(is.na(.)))
pk_classes %>%
select_if(~ !any(is.na(.)))
print(drop_na(pk_classes) %>% nrow())
print(drop_na(pk_classes, c("fourth")) %>% nrow())
print(drop_na(pk_classes, c("third")) %>% nrow())
print(drop_na(pk_classes, c("second")) %>% nrow())
print(drop_na(pk_classes, c("first")) %>% nrow())
pk_classes %>%
select_if(~ !any(is.na(.)))
pk_classes %>%
select_if(~ !any(is.na(.))) %>%  colnames()
pk_classes %>%
fill("third", .direction = "down")
pk_classes %>%
replace_na(list(third = 'x3', fourth = 'x4', fifth = 'x5'))
pk_classes %>%
replace_na(list(third = '-', fourth = '--', fifth = '---'))
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~is_legendary)
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))
ggplot(pokemon, aes(x = type1, y = type2))+
geom_count()+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
ggplot(pokemon, aes(x = attack, y = defense))+
geom_point(aes(colour = factor(generation)))+
geom_smooth(method = "lm")+
facet_wrap(~factor(generation))
pokemon %>%
ggplot()+
geom_histogram(aes(x = attack, fill = factor(generation)), position = "stack")
ggplot(pokemon)+
geom_density(aes(x = attack, fill = factor(generation)), position = "fill")
pokemon %>%
filter(pokedex_number >= 1, pokedex_number <= 15) %>%
summarise(avg_hp = mean(hp), avg_speed = mean(speed))
pokemon %>%
count(generation)
pokemon %>% summarise_if(is.numeric, mean, na.rm = T)
pokemon %>%
select(attack, sp_attack, speed) %>%
summarise_if(is.numeric, c("mean", "sd"), na.rm = TRUE)
pokemon %>%
select(attack, sp_attack, speed) %>%
summarise(c("mean", "sd"), na.rm = TRUE)
pokemon %>%
select(attack, sp_attack, speed) %>%
summarise_if(1, c("mean", "sd"), na.rm = TRUE)
pokemon %>%
select(attack, sp_attack, speed) %>%
summarise_if(TRUE, c("mean", "sd"), na.rm = TRUE)
pokemon %>%
select(attack, sp_attack, speed) %>%
summarise_if(is.numeric, c("mean", "sd"), na.rm = TRUE)
pokemon %>%
group_by(generation) %>%
select(attack, sp_attack, speed) %>%
summarise_if(is.numeric, c("mean", "sd"), na.rm = TRUE)
pokemon %>%
group_by(generation) %>%
summarise_at(vars(hp:speed), mean, na.rm = T)
pokemon %>%
filter(generation != 6 & generation != 7 & is_legendary == 1) %>%
sample_frac(0.2)
pokemon %>%
filter(generation != 6 & generation != 7 & is_legendary == 1) %>%
sample_frac(0.2) %>%
slice(3:6) %>%
arrange(desc(hp), speed) %>%
top_n(1, attack)
pokemon %>%
filter(generation != 6 & generation != 7 & is_legendary == 1) %>%
sample_frac(0.2) %>%
slice(3:6) %>%
arrange(desc(hp), speed) %>%
top_n(1, attack)
pokemon %>%
filter(generation != 6 & generation != 7 & is_legendary == 1) %>%
sample_frac(0.2) %>%
slice(3:6) %>%
arrange(desc(hp), speed) %>%
top_n(1, attack)
pokemon %>%
add_row(name = 'Diglett-Alola', generation = NaN, .before = 51) %>%
slice(45:55)
pokemon %>%
select(pokedex_number, starts_with('ability')) %>%
head()
pokemon %>%
pull(name) %>%
.[1:10]
pokemon %>%
mutate(total_stats = hp + attack + sp_attack + defense +
sp_defense + speed) %>%
select(pokedex_number, name, total_stats) %>%
rename(num = pokedex_number, pokemon = name) %>%
sample_n(10) %>%
arrange(desc(total_stats), num)
pokemon %>%
mutate_if(is.numeric, funs(log, exp)) %>%
select_if(is.numeric) %>%
sample(4) %>%
head()
pokemon %>%
pull(hp) %>%
cummean() %>%
enframe(name = NULL) %>%
.[c(1, nrow(pokemon)%/%2, nrow(pokemon)), ]
pokemon %>%
pull(hp) %>%
cummean()
pokemon %>%
pull(hp) %>%
cummean() %>%
enframe(name = NULL) %>%
.[c(1, nrow(pokemon)%/%2, nrow(pokemon)), ]
pokemon %>%
pull(hp) %>%
cummean()
pokemon %>%
pull(hp) %>%
cummean() %>%
enframe(name = NULL) %>%
.[c(1, nrow(pokemon)%/%2, nrow(pokemon)), ]
pokemon %>%
pull(attack) %>%
cume_dist() %>%
enframe(name = "pokemon_num", value = "percentile") %>%
ggplot(aes(x = pokemon_num, y = percentile))+
geom_line()
pokemon %>%
pull(generation) %>%
cume_dist() %>%
unique()
pokemon %>%
pull(generation) %>%
cume_dist()
pokemon %>%
pull(generation) %>%
cume_dist() %>%
unique()
pokemon %>%
pull(attack) %>%
cume_dist() %>%
enframe(name = "pokemon_num", value = "percentile")
pokemon %>%
pull(attack) %>%
cume_dist() %>%
enframe(name = "pokemon_num", value = "percentile") %>%
ggplot(aes(x = pokemon_num, y = percentile))+
geom_line()
pokemon %>%
pull(generation) %>%
cume_dist() %>%
unique()
pokemon %>%
summarise(n = n(), sd_hp = sd(hp), IQR_attack = IQR(attack))
bind_cols(pk_classes, pk_classes) %>%
head()
pk_classes %>%
sample_frac(0.5) -> temp1
pk_stats %>%
sample_frac(0.1) -> temp2
left_join(temp1, temp2, by = "pokedex_number")
inner_join(temp1, temp2, by = "pokedex_number")
right_join(temp1, temp2, by = "pokedex_number")
full_join(temp1, temp2, by = "pokedex_number")
semi_join(temp1, temp2, by = "pokedex_number")
anti_join(temp1, temp2, by = "pokedex_number")
ggplot(pokemon)+
geom_density(aes(x = attack, fill = factor(generation)), position = "fill")
ggplot(pokemon, aes(x = attack, y = defense))+
geom_point(aes(colour = factor(generation)))+
geom_smooth(method = "lm")+
facet_wrap(~factor(generation))
ggplot(pokemon, aes(x = type1, y = type2))+
geom_count()+
scale_x_discrete(guide = guide_axis(n.dodge = 3))
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))
renv::status()
renv::snapshot()
pokemon %>%
mutate(power = hp + attack + defense + sp_attack + sp_defense + speed) %>%
ggplot(aes(x = factor(generation), y = power))+
geom_boxplot(aes(fill = factor(generation)))+
facet_wrap(~is_legendary)
pokemon %>%
ggplot()+
geom_bar(aes(x = reorder(factor(generation),
(pokemon %>%
group_by(generation) %>%
summarise(n = n()) %>%
right_join(pokemon, by = "generation") %>%
pull(n))),
fill = factor(generation)))+
geom_abline(aes(intercept = nrow(pokemon)/7, slope = 0), size = 1.5)+
ylab("# of pokemons") + xlab("generation")+
coord_flip()
